spring:
  main:
    allow-circular-references: true
    server:
      port: ${SERVER_PORT}
      servlet:
        context-path: /journal
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: journaldb
      auto-index-creation: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${JAVA_EMAIL}
    password: ${JAVA_EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  redis:
    host: ${REDIS_HOST}
    port: 19976
    password: ${REDIS_PASSWORD}

  kafka:
    bootstrap-servers: ${KAFKA_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      group-id: weekly-sentiment-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.kafka.consumer:
          json:
            trusted:
              packages: net.khushtaunk.journalApp.model
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username='ZJKA5YBXPOPURLIS' password='CM9KJLfpNPnsGe7lcconLIF5iOPSx/nzs/wlLvvtW44llXqJvm0FBwuhiqjuyI4F';
      session:
        timeout:
          ms: 45000
weather:
  api:
    key: ${WEATHER_API_KEY}
springdoc:
  swagger-ui:
    path: /docs
jwt:
  secret-key: ${SECRET_KEY}
